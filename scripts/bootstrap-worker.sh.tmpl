
#!/bin/bash
set -euo pipefail

# Update and install Docker
yum update -y
amazon-linux-extras install docker -y
systemctl enable docker
systemctl start docker

# Add ec2-user to the docker group (for non-root access)
usermod -aG docker ec2-user

# Disable swap (kubeadm will complain otherwise)
swapoff -a
sed -i '/swap/d' /etc/fstab

# Enable required kernel modules and sysctl params
modprobe br_netfilter
echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
echo '1' > /proc/sys/net/ipv4/ip_forward
cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system

# Add the updated Kubernetes repo (change v1.29 if needed)
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
EOF

# Install Kubernetes components
yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl enable kubelet
systemctl start kubelet

# Get the master IP injected from Terraform
master_ip="${master_ip}"


# Fetch the private key from AWS Secrets Manager
aws secretsmanager get-secret-value \
  --region us-west-2 \
  --secret-id cka-key-private \
  --query SecretString \
  --output text > /home/ec2-user/cka-key

# Set proper permissions
chmod 400 /home/ec2-user/cka-key.pem
chown ec2-user:ec2-user /home/ec2-user/cka-key

echo "[INFO] Attempting to retrieve join command from master at $master_ip..."

if [ -z "$master_ip" ]; then
  echo "[ERROR] MASTER_IP is not set. Make sure Terraform injects the master IP."
  exit 1
fi

# Copy the join script from the master node
scp -q -o StrictHostKeyChecking=no ec2-user@${master_ip}:/joincommand.sh /joincommand.sh
if [ $? -ne 0 ]; then
  echo "[ERROR] Failed to retrieve /joincommand.sh from master node at $MASTER_IP"
  exit 1
fi

echo "[INFO] Retrieved joincommand.sh successfully."

# Make it executable and run it
chmod +x /joincommand.sh
bash /joincommand.sh

echo "[INFO] Worker node successfully joined the cluster."
